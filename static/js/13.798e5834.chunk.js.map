{"version":3,"sources":["firebase/FireBaseRef.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","store/actions/auth.js","store/actions/index.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","container/InfoPage/InfoPage.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","auth","dispatch","a","authStart","web3","Web3","window","ethereum","enable","eth","net","getNetworkType","Error","getAccounts","accounts","data","ref","getInforData","orderByChild","equalTo","once","key","userInfor","val","getInforSuccess","setDirectPath","fetch","etherScanResponse","json","rateResult","getUSDRate","result","ethusd","authSuccess","message","authFail","type","actionTypes","address","error","getInfor","infor","console","log","getInforStart","setTimeout","path","rate","easeOut","t","min","max","Math","CircularProgress","props","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","root","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","name","flip","connect","state","loading","authRedirectPath","userAddr","onSetInfor","actions","useState","phone","information","setInformation","handleChange","input","event","updatedProfile","target","valid","onSubmit","newPost","to","noValidate","autoComplete","label","onChange","InputProps","inputComponent","PhoneFormatCustom","disabled","onClick"],"mappings":"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","file":"static/js/13.798e5834.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCYq8IE7Q_7Mr8jq4GSehmF9zqXDyub0zA\",\n  authDomain: \"microfinance-cab4b.firebaseapp.com\",\n  databaseURL: \"https://microfinance-cab4b.firebaseio.com\",\n  projectId: \"microfinance-cab4b\",\n  storageBucket: \"microfinance-cab4b.appspot.com\",\n  messagingSenderId: \"814835183992\",\n  appId: \"1:814835183992:web:09791f4a233f4b837fd88d\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const database = firebase.database();\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import * as actionTypes from \"./actionTypes\";\nimport Web3 from \"web3\";\nimport { database } from \"../../firebase/FireBaseRef\";\nconst ETHER_SCAN_API =\n  \"https://api.etherscan.io/api?module=stats&action=ethprice\";\nexport const auth = () => {\n  return async dispatch => {\n    dispatch(authStart());\n    const web3 = new Web3(window.ethereum);\n    try {\n      await window.ethereum.enable();\n      const testnet = await web3.eth.net.getNetworkType();\n      if(testnet!==\"ropsten\"){\n        throw new Error(\"The application is currently on Ropsten testnet\");\n      }\n      const accounts = await web3.eth.getAccounts();\n      const data = database.ref(\"infor\");\n      const getInforData = async () =>\n        await data\n          .orderByChild(\"userAddr\")\n          .equalTo(accounts[0])\n          .once(\"value\");\n      const userInfor = await getInforData();\n      for (let key in userInfor.val()) {\n        const data = { ...userInfor.val()[key], key: key };\n        dispatch(getInforSuccess(data));\n        dispatch(setDirectPath(\"/\"));\n      }\n      let etherScanResponse = await fetch(ETHER_SCAN_API);\n      let rateResult = await etherScanResponse.json();\n      dispatch(getUSDRate(rateResult.result.ethusd));\n      dispatch(authSuccess(accounts[0]));\n\n      // dispatch(getInforSuccess(\"Leo\"));\n    } catch (error) {\n      if(error.message){\n        dispatch(authFail(error.message));\n      } else {\n        dispatch(authFail(error));\n      }\n      \n    }\n  };\n};\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = address => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    address: address\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const getInfor = infor => {\n  return async dispatch => {\n    console.log(infor);\n    dispatch(getInforStart());\n    setTimeout(() => {\n      dispatch(getInforSuccess(infor));\n      dispatch(setDirectPath(\"/\"));\n    }, 1000);\n  };\n};\nexport const getInforStart = () => {\n  return {\n    type: actionTypes.GET_INFORMATION_START\n  };\n};\n\nexport const getInforSuccess = infor => {\n  return {\n    type: actionTypes.GET_INFORMATION_SUCCESS,\n    infor: infor\n  };\n};\n\nexport const getInforFail = error => {\n  return {\n    type: actionTypes.GET_INFORMATION_FAIL,\n    error: error\n  };\n};\n\nexport const setDirectPath = path => {\n  return {\n    type: actionTypes.SET_DIRECT_PATH,\n    path: path\n  };\n};\n\nexport const getUSDRate = rate => {\n  return {\n    type: actionTypes.GET_USD_RATE,\n    rate: rate\n  };\n};\n","export { auth, getInfor, setDirectPath } from \"./auth\";\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import React, { useState } from \"react\";\nimport \"./InfoPage.scss\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { database } from \"../../firebase/FireBaseRef\";\nimport * as actions from \"../../store/actions/index\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { PhoneFormatCustom } from \"../../scripts/utility\";\nfunction InfoPage(props) {\n  const {\n    infor,\n    loading,\n    error,\n    authRedirectPath,\n    onSetInfor,\n    userAddr\n  } = props;\n  const [information, setInformation] = useState({\n    name: \"\",\n    address: \"\",\n    phone: \"\"\n  });\n  const handleChange = input => event => {\n    const updatedProfile = { ...information };\n    updatedProfile[input] = event.target.value;\n    setInformation(updatedProfile);\n  };\n  const valid =\n    !!information.name && !!information.address && !!information.phone;\n  const onSubmit = async () => {\n    const data = { ...information, userAddr: userAddr };\n    let newPost = await database.ref(\"infor\").push(data);\n    onSetInfor({ ...data, key: newPost.key });\n  };\n  return (\n    <div className=\"bg-color\">\n      <div className=\"info__content\">\n        {!!infor && <Redirect to={authRedirectPath} />}\n        <h2>Add Your Information</h2>\n        <form noValidate autoComplete=\"off\">\n          <TextField\n            label=\"Name\"\n            variant=\"outlined\"\n            className=\"info__input\"\n            value={information.name}\n            onChange={handleChange(\"name\")}\n          />\n          <TextField\n            label=\"Address\"\n            variant=\"outlined\"\n            className=\"info__input\"\n            value={information.address}\n            onChange={handleChange(\"address\")}\n          />\n          <TextField\n            label=\"Phone number\"\n            variant=\"outlined\"\n            className=\"info__input\"\n            value={information.phone}\n            onChange={handleChange(\"phone\")}\n            InputProps={{\n              inputComponent: PhoneFormatCustom\n            }}\n          />\n        </form>\n        <button\n          className=\"btn btn--blue info__submit\"\n          disabled={!valid}\n          onClick={() => onSubmit()}\n        >\n          {loading ? <CircularProgress /> : \"Submit\"}\n        </button>\n\n        {!!error && <p>{error}</p>}\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    infor: state.infor,\n    loading: state.loading,\n    error: state.error,\n    authRedirectPath: state.authRedirectPath,\n    userAddr: state.address\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetInfor: infor => dispatch(actions.getInfor(infor))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoPage);\n"],"sourceRoot":""}